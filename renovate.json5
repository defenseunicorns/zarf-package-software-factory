{
  "extends": [
    "config:base"
  ],
  "labels": [
    "renovate"
  ],
  "prHourlyLimit": 0,
  "prConcurrentLimit": 0,
  "prBodyNotes": [
    "- :warning: The E2E tests need to be run, they have a manual trigger. To start them add a comment to this PR that says `/test all`",
    "{{#if (containsString depType 'zarfcomponents')}}- :warning: Please ensure the images are also updated in `zarf.yaml`. Hint: Try using `zarf prepare find-images`. Right now this process is manual (add commits to this branch), but we intend to automate it later.{{/if}}",
    "{{#if (containsString depType 'bigbang')}}- :warning: Please ensure the git repos that Big Bang depends on are also updated in `zarf.yaml`. You can find them by going to [values.yaml](https://repo1.dso.mil/big-bang/bigbang/-/blob/{{newVersion}}/chart/values.yaml) in the Big Bang repo in the `<subrepo>.git.tag` parameter for each repo. Right now this process is manual (add commits to this branch), but we intend to automate it later.{{/if}}",
    "{{#if (containsString depType 'bigbang')}}- :warning: The vendor folder also needs to be updated. Renovate did not do it automatically. Run `make vendor-big-bang-base` and commit+push any changes.{{/if}}",
  ],
  "pre-commit": {
    "enabled": true
  },
  "packageRules": [
    {
      "matchPackagePrefixes": [
        "https://togithub.com/renovatebot/pre-commit-hooks",
        "https://github.com/renovatebot/pre-commit-hooks"
      ],
      "schedule": [
        "before 2am"
      ]
    }
  ],
  "regexManagers": [
    // Big Bang version
    {
      "fileMatch": [
        "zarf\\.yaml",
        "^Makefile$"
      ],
      "matchStrings": [
        "https:\/\/repo1\\.dso\\.mil\/big-bang\/bigbang\\.git@(?<currentValue>\\S+)",
        "https:\/\/repo1\\.dso\\.mil\/big-bang\/bigbang\\.git\/\/base\/flux\\?ref=(?<currentValue>\\S+)",
        "BIGBANG_VERSION := (?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://repo1.dso.mil/big-bang/bigbang.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "zarfcomponents-bigbang"
    },
    // Postgres Operator version
    {
      "fileMatch": [
        ".*\\.yaml"
      ],
      "matchStrings": [
        "https:\/\/github\\.com\/zalando\/postgres-operator\\.git@(?<currentValue>\\S+)",
        "url: https:\/\/github\\.com\/zalando\/postgres-operator\\.git\\s+ref:\\s+tag:\\s+(?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://github.com/zalando/postgres-operator.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "zarfcomponents"
    },
    // Jira version
    {
      "fileMatch": [
        ".*\\.yaml"
      ],
      "matchStrings": [
        "https:\/\/repo1\\.dso\\.mil\/big-bang\/product\/community\/jira\\.git@(?<currentValue>\\S+)",
        "url: https://repo1\\.dso\\.mil/big-bang/product/community/jira\\.git\\s+ref:\\s+tag:\\s+(?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://repo1.dso.mil/big-bang/product/community/jira.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "zarfcomponents",
      "versioningTemplate": "regex:^v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-bb.(?<build>\\d+)$"
    },
    // Confluence version
    {
      "fileMatch": [
        ".*\\.yaml"
      ],
      "matchStrings": [
        "https:\/\/repo1\\.dso\\.mil\/big-bang\/product\/community\/confluence\\.git@(?<currentValue>\\S+)",
        "url: https://repo1\\.dso\\.mil/big-bang/product/community/confluence\\.git\\s+ref:\\s+tag:\\s+(?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://repo1.dso.mil/big-bang/product/community/confluence.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "zarfcomponents",
      "versioningTemplate": "regex:^v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-bb.(?<build>\\d+)$"
    },
    // Artifactory version
    {
      "fileMatch": [
        ".*\\.yaml"
      ],
      "matchStrings": [
        "https:\/\/repo1\\.dso\\.mil\/big-bang\/apps\/third-party\/jfrog-platform\\.git@(?<currentValue>\\S+)",
        "https:\/\/repo1\\.dso\\.mil\/big-bang\/apps\/third-party\/jfrog-platform\\.git\\s+ref:\\s+tag:\\s+(?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://repo1.dso.mil/big-bang/apps/third-party/jfrog-platform.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "zarfcomponents",
      "versioningTemplate": "regex:^v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-bb.(?<build>\\d+)$"
    },
    // Jenkins version
    {
      "fileMatch": [
        ".*\\.yaml"
      ],
      "matchStrings": [
        "https:\/\/repo1\\.dso\\.mil\/big-bang\/product\/community\/jenkins\\.git@(?<currentValue>\\S+)",
        "https://repo1\\.dso\\.mil/big-bang/product/community/jenkins\\.git\\s+ref:\\s+tag:\\s+(?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://repo1.dso.mil/big-bang/product/community/jenkins.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "zarfcomponents",
      "versioningTemplate": "regex:^v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-bb.(?<build>\\d+)$"
    },
    // Redis version
    {
      "fileMatch": [
        ".*\\.yaml"
      ],
      "matchStrings": [
        "https:\/\/repo1\\.dso\\.mil\/big-bang\/product\/packages\/redis\\.git@(?<currentValue>\\S+)",
        "https://repo1\\.dso\\.mil/big-bang/product/packages/redis\\.git\\s+ref:\\s+tag:\\s+(?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://repo1.dso.mil/big-bang/product/packages/redis.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "zarfcomponents",
      "versioningTemplate": "regex:^v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-bb.(?<build>\\d+)$"
    },
    // Zarf version
    {
      "fileMatch": [
        ".*\\.yaml",
        "^Makefile$"
      ],
      "matchStrings": [
        "https:\/\/raw\\.githubusercontent\\.com\/defenseunicorns\/zarf\/(?<currentValue>\\S+)\/zarf\\.schema\\.json",
        "ZARF_VERSION := (?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://github.com/defenseunicorns/zarf.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "zarfbin"
    },
    // Build Harness version
    {
      "fileMatch": [
        "^Makefile$"
      ],
      "matchStrings": [
        "BUILD_HARNESS_REPO := (?<depName>\\S+)\\nBUILD_HARNESS_VERSION := (?<currentValue>\\S+)"
      ],
      "datasourceTemplate": "docker",
      "depTypeTemplate": "buildharness"
    }
  ]
}
