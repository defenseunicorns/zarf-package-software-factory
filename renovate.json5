{
  "extends": [
    "config:base"
  ],
  "labels": [
    "renovate"
  ],
  "prHourlyLimit": 0,
  "prConcurrentLimit": 0,
  "prBodyNotes": [
    "- :warning: The E2E tests need to be run, they have a manual trigger. To start them add a comment to this PR that says `/test all`",
    "{{#if (containsString depType 'zarfcomponents')}}- :warning: Please ensure the images are also updated in `zarf.yaml`. Hint: Try using `zarf prepare find-images`. Right now this process is manual (add commits to this branch), but we intend to automate it later.{{/if}}",
    "{{#if (containsString depType 'bigbang')}}- :warning: Please ensure the git repos that Big Bang depends on are also updated in `zarf.yaml`. You can find them by going to [values.yaml](https://repo1.dso.mil/platform-one/big-bang/bigbang/-/blob/{{newVersion}}/chart/values.yaml) in the Big Bang repo in the `<subrepo>.git.tag` parameter for each repo. Right now this process is manual (add commits to this branch), but we intend to automate it later.{{/if}}",
    "{{#if (containsString depType 'buildharness-deps')}}- :warning: The Build Harness image needs to be manually released after this PR is merged. Run [this GitHub Action](https://github.com/defenseunicorns/zarf-package-software-factory/actions/workflows/build-build-harness.yml) to kick it off. We intend to make this more automated at some point.{{/if}}"
  ],
  "pre-commit": {
    "enabled": true
  },
  "packageRules": [
    {
      "matchPackagePrefixes": [
        "https://togithub.com/renovatebot/pre-commit-hooks"
      ],
      "schedule": [
        "before 2am"
      ]
    }
  ],
  "regexManagers": [
    // Big Bang version
    {
      "fileMatch": [
        "^zarf.yaml$",
        "^Makefile$"
      ],
      "matchStrings": [
        "https:\/\/repo1\\.dso\\.mil\/platform-one\/big-bang\/bigbang\\.git@(?<currentValue>\\S+)",
        "BIGBANG_VERSION := (?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://repo1.dso.mil/platform-one/big-bang/bigbang.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "zarfcomponents-bigbang"
    },
    // Postgres Operator version
    {
      "fileMatch": [
        "^zarf.yaml$"
      ],
      "matchStrings": [
        "https:\/\/github\\.com\/zalando\/postgres-operator\\.git@(?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://github.com/zalando/postgres-operator.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "zarfcomponents"
    },
    // Jira version
    {
      "fileMatch": [
        "^zarf.yaml$"
      ],
      "matchStrings": [
        " https:\/\/repo1\\.dso\\.mil\/platform-one\/big-bang\/apps\/third-party\/jira\\.git@(?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://repo1.dso.mil/platform-one/big-bang/apps/third-party/jira.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "zarfcomponents"
    },
    // Confluence version
    {
      "fileMatch": [
        "^zarf.yaml$"
      ],
      "matchStrings": [
        "https:\/\/repo1\\.dso\\.mil\/platform-one\/big-bang\/apps\/third-party\/confluence\\.git@(?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://repo1.dso.mil/platform-one/big-bang/apps/third-party/confluence.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "zarfcomponents"
    },
    // Jenkins version
    {
      "fileMatch": [
        "^zarf.yaml$"
      ],
      "matchStrings": [
        "https:\/\/github\\.com\/jenkinsci\/helm-charts\\.git@jenkins-(?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://github.com/jenkinsci/helm-charts.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "zarfcomponents",
      "extractVersionTemplate": "^jenkins-(?<version>.*)$"
    },
    // Zarf version
    {
      "fileMatch": [
        "^zarf\\.yaml$",
        "^Makefile$",
        "^\\.pre-commit-config\\.yaml$"
      ],
      "matchStrings": [
        "https:\/\/raw\\.githubusercontent\\.com\/defenseunicorns\/zarf\/(?<currentValue>\\S+)\/zarf\\.schema\\.json",
        "ZARF_VERSION := (?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://github.com/defenseunicorns/zarf.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "zarfbin"
    },
    // Build Harness version
    {
      "fileMatch": [
        "^Makefile$"
      ],
      "matchStrings": [
        "BUILD_HARNESS_VERSION := (?<currentValue>\\S+)"
      ],
      "depNameTemplate": "ghcr.io/defenseunicorns/zarf-package-software-factory/build-harness",
      "datasourceTemplate": "docker",
      "depTypeTemplate": "buildharness"
    },
    // ASDF version
    {
      "fileMatch": [
        "^Dockerfile$"
      ],
      "matchStrings": [
        "ARG ASDF_VERSION=\"(?<currentValue>\\S+)\""
      ],
      "depNameTemplate": "https://github.com/asdf-vm/asdf.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "buildharness-deps",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    // Golang version
    {
      "fileMatch": [
        "^Dockerfile$",
        "^\\.tool-versions$"
      ],
      "matchStrings": [
        "ARG GOLANG_VERSION=\"(?<currentValue>\\S+)\"",
        "golang (?<currentValue>\\S+)"
      ],
      "depNameTemplate": "golang",
      "datasourceTemplate": "golang-version",
      "depTypeTemplate": "buildharness-deps"
    },
    // golangci-lint version
    {
      "fileMatch": [
        "^Dockerfile$",
        "^\\.tool-versions$"
      ],
      "matchStrings": [
        "ARG GOLANGCILINT_VERSION=\"(?<currentValue>\\S+)\"",
        "golangci-lint (?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://github.com/golangci/golangci-lint.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "buildharness-deps",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    // python version
    {
      "fileMatch": [
        "^Dockerfile$",
        "^\\.tool-versions$"
      ],
      "matchStrings": [
        "ARG PYTHON_VERSION=\"(?<currentValue>\\S+)\"",
        "python (?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://github.com/python/cpython.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "buildharness-deps",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    // hadolint version
    {
      "fileMatch": [
        "^Dockerfile$",
        "^\\.tool-versions$"
      ],
      "matchStrings": [
        "ARG HADOLINT_VERSION=\"(?<currentValue>\\S+)\"",
        "hadolint (?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://github.com/hadolint/hadolint.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "buildharness-deps",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    // pre-commit version
    {
      "fileMatch": [
        "^Dockerfile$",
        "^\\.tool-versions$"
      ],
      "matchStrings": [
        "ARG PRE_COMMIT_VERSION=\"(?<currentValue>\\S+)\"",
        "pre-commit (?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://github.com/pre-commit/pre-commit.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "buildharness-deps",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    // terraform version
    {
      "fileMatch": [
        "^Dockerfile$",
        "^\\.tool-versions$"
      ],
      "matchStrings": [
        "ARG TERRAFORM_VERSION=\"(?<currentValue>\\S+)\"",
        "terraform (?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://github.com/hashicorp/terraform.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "buildharness-deps",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    // tflint version
    {
      "fileMatch": [
        "^Dockerfile$",
        "^\\.tool-versions$"
      ],
      "matchStrings": [
        "ARG TFLINT_VERSION=\"(?<currentValue>\\S+)\"",
        "tflint (?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://github.com/terraform-linters/tflint.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "buildharness-deps",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    // tfsec version
    {
      "fileMatch": [
        "^Dockerfile$",
        "^\\.tool-versions$"
      ],
      "matchStrings": [
        "ARG TFSEC_VERSION=\"(?<currentValue>\\S+)\"",
        "tfsec (?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://github.com/aquasecurity/tfsec.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "buildharness-deps",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    // sops version
    {
      "fileMatch": [
        "^Dockerfile$",
        "^\\.tool-versions$"
      ],
      "matchStrings": [
        "ARG SOPS_VERSION=\"(?<currentValue>\\S+)\"",
        "sops (?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://github.com/mozilla/sops.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "buildharness-deps",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    // make version
    {
      "fileMatch": [
        "^Dockerfile$",
        "^\\.tool-versions$"
      ],
      "matchStrings": [
        "ARG MAKE_VERSION=\"(?<currentValue>\\S+)\"",
        "make (?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://github.com/mirror/make.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "buildharness-deps",
      "versioningTemplate": "loose"
    }
  ]
}
