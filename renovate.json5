{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:base"
  ],
  "labels": [
    "renovate"
  ],
  "prHourlyLimit": 0,
  "prConcurrentLimit": 0,
  "prBodyNotes": [
    "- :warning: The E2E tests need to be run, they have a manual trigger. To start them add a comment to this PR that says `/test all`",
    "{{#if (containsString depType 'zarfcomponents')}}- :warning: Please ensure the images are also updated in `zarf.yaml`. Hint: Try using `zarf prepare find-images`. Right now this process is manual (add commits to this branch), but we intend to automate it later.{{/if}}",
    "{{#if (containsString depType 'bigbang')}}- :warning: Please ensure the git repos that Big Bang depends on are also updated in `zarf.yaml`. You can find them by going to [values.yaml](https://repo1.dso.mil/big-bang/bigbang/-/blob/{{newVersion}}/chart/values.yaml) in the Big Bang repo in the `<subrepo>.git.tag` parameter for each repo. Right now this process is manual (add commits to this branch), but we intend to automate it later.{{/if}}",
    "{{#if (containsString depType 'bigbang')}}- :warning: The vendor folder also needs to be updated. Renovate did not do it automatically. Run `make vendor-big-bang-base` and commit+push any changes.{{/if}}",
  ],
  "pre-commit": {
    "enabled": true
  },
  "hostRules": [
    {
      "matchHost": "registry1.dso.mil",
      "hostType": "docker",
      "username": "Jordan_McClintock",
      "encrypted": {
        "password": "wcFMA/xDdHCJBTolARAAiMAAb0F8dbkvcns8mj0ZXvTC6Q2foa0aDnZwQjn7IoIyRBr8ZQ3tlSV3YW1Qj7MTQ3bJJ5dqlneRYGfR2dpaKUFhLadeCwCGnI6TenYOKS/YlA1wPjE/dSXPZBGYvco2Wj7eVVxF4WWLo4C1G9LvseVrLiHejJ8dm0Dr9NfyQ3E66Xdvdi926T5yVL8BzZgI4UivxdpuRvGJIQxG4z9j1vfs2gxR6bvQCc77/QVJazBadwTZkDo7ltWzfE5Fw232aOvylmsIV1SL5nB8cglvqJNDEr7HEf7sUnOFinvH3wDgghDD+mQ/1tXExdSfblLQ9UW1+KaOES59jcU+9wzsJAG3U4g//ImXFgqcBiHtf2DKELyL8rq6wWP+E/gix3SSDmUsJDn9JbcaDO7AHYKGkQLx4t8f78z4ouWXTR/VLutThW0SqGPlXHAL2BcCI8NaNlD0/f7cYCXk/1F+tZj3ukPF5ILgT2GNdNDrGkdgXxPd2+UdGHBR3OedEki/iibIrYEMhhbnahiw65zqzjJAQkl7GckETGX5wAthlY+Yr2IpoiqXeeRsWw+65kceaR8mKtILB7CWvCveoQIQMqZIVISSB1Gk6NVvWLCYwwg0TzYiJt3Vbua1T8DJaLptc8gUBdOKPaDpKNHR6usMU6CnigLja6fVrRoBVf20F7y3olvSfgEoW92K1A1XARIhGfdKWbeFFbZKJaD4qSL/Yaq/H5qRMrpT7s23Nq1g+igjiOzPx6Kad4Q1AUGFQ67BHak/B9uhsPbrHi6U9OxufwSdzYX+rA1/ISsuhVys6uyQMLs3xlFglaNP34DXdEldMzhLxBcw/f9JvHJdvVcQclcEcw"
      }
    }
  ],
  "packageRules": [
    {
      "matchPackagePatterns": [
        "tflint",
        "golangci",
        "golangci-lint",
        "terratest",
        "grunt",
        "not-a-build-harness",
        "testify",
        "pre-commit",
        "terraform",
        "check-jsonschema",
        "slash-command-dispatch",
        "python",
        "golang",
        "add-to-project",
        "tfsec",
        "sops"
      ],
      "matchUpdateTypes": [
        "major",
        "minor",
        "patch",
        "pin",
        "pinDigest",
        "digest",
        "lockFileMaintenance",
        "rollback",
        "bump",
        "replacement"
      ],
      "groupName": "test-dependencies"
    },
    {
      "matchPackagePatterns": [
        "postgres-operator"
      ],
      "matchUpdateTypes": [
        "major",
        "minor",
        "patch",
        "pin",
        "pinDigest",
        "digest",
        "lockFileMaintenance",
        "rollback",
        "bump",
        "replacement"
      ],
      "groupName": "renovate/postgres-operator"
    },
    {
      "matchPackagePatterns": [
        "jira"
      ],
      "matchUpdateTypes": [
        "major",
        "minor",
        "patch",
        "pin",
        "pinDigest",
        "digest",
        "lockFileMaintenance",
        "rollback",
        "bump",
        "replacement"
      ],
      "groupName": "renovate/jira"
    },
    {
      "matchPackagePatterns": [
        "confluence"
      ],
      "matchUpdateTypes": [
        "major",
        "minor",
        "patch",
        "pin",
        "pinDigest",
        "digest",
        "lockFileMaintenance",
        "rollback",
        "bump",
        "replacement"
      ],
      "groupName": "renovate/confluence"
    },
    {
      "matchPackagePatterns": [
        "artifactory"
      ],
      "matchUpdateTypes": [
        "major",
        "minor",
        "patch",
        "pin",
        "pinDigest",
        "digest",
        "lockFileMaintenance",
        "rollback",
        "bump",
        "replacement"
      ],
      "groupName": "renovate/artifactory"
    },
    {
      "matchPackagePatterns": [
        "jenkins"
      ],
      "matchUpdateTypes": [
        "major",
        "minor",
        "patch",
        "pin",
        "pinDigest",
        "digest",
        "lockFileMaintenance",
        "rollback",
        "bump",
        "replacement"
      ],
      "groupName": "renovate/jenkins"
    },
    {
      "matchPackagePatterns": [
        "redis"
      ],
      "matchUpdateTypes": [
        "major",
        "minor",
        "patch",
        "pin",
        "pinDigest",
        "digest",
        "lockFileMaintenance",
        "rollback",
        "bump",
        "replacement"
      ],
      "groupName": "renovate/redis"
    }
  ],
  "regexManagers": [
    // Big Bang version
    {
      "fileMatch": [
        "zarf\\.yaml",
        "^Makefile$"
      ],
      "matchStrings": [
        "https:\/\/repo1\\.dso\\.mil\/big-bang\/bigbang\\.git@(?<currentValue>\\S+)",
        "https:\/\/repo1\\.dso\\.mil\/big-bang\/bigbang\\.git\/\/base\/flux\\?ref=(?<currentValue>\\S+)",
        "BIGBANG_VERSION := (?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://repo1.dso.mil/big-bang/bigbang.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "zarfcomponents-bigbang"
    },
    // Postgres Operator version
    {
      "fileMatch": [
        ".*\\.yaml"
      ],
      "matchStrings": [
        "https:\/\/github\\.com\/zalando\/postgres-operator\\.git@(?<currentValue>\\S+)",
        "url: https:\/\/github\\.com\/zalando\/postgres-operator\\.git\\s+ref:\\s+tag:\\s+(?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://github.com/zalando/postgres-operator.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "zarfcomponents"
    },
    // Jira version
    {
      "fileMatch": [
        ".*\\.yaml"
      ],
      "matchStrings": [
        "https:\/\/repo1\\.dso\\.mil\/big-bang\/product\/community\/jira\\.git@refs\/tags\/(?<currentValue>\\S+)",
        "https:\/\/repo1\\.dso\\.mil\/big-bang\/product\/community\/jira\\.git@(?<currentValue>\\S+)",
        "url: https://repo1\\.dso\\.mil/big-bang/product/community/jira\\.git\\s+ref:\\s+tag:\\s+(?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://repo1.dso.mil/big-bang/product/community/jira.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "zarfcomponents",
      "versioningTemplate": "regex:^v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-bb.(?<build>\\d+)$"
    },
    // Confluence version
    {
      "fileMatch": [
        ".*\\.yaml"
      ],
      "matchStrings": [
        "https:\/\/repo1\\.dso\\.mil\/big-bang\/product\/community\/confluence\\.git@refs\/tags\/(?<currentValue>\\S+)",
        "https:\/\/repo1\\.dso\\.mil\/big-bang\/product\/community\/confluence\\.git@(?<currentValue>\\S+)",
        "url: https://repo1\\.dso\\.mil/big-bang/product/community/confluence\\.git\\s+ref:\\s+tag:\\s+(?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://repo1.dso.mil/big-bang/product/community/confluence.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "zarfcomponents",
      "versioningTemplate": "regex:^v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-bb.(?<build>\\d+)$"
    },
    // Artifactory version
    {
      "fileMatch": [
        ".*\\.yaml"
      ],
      "matchStrings": [
        "https:\/\/repo1\\.dso\\.mil\/big-bang\/apps\/third-party\/jfrog-platform\\.git@refs\/tags\/(?<currentValue>\\S+)",
        "https:\/\/repo1\\.dso\\.mil\/big-bang\/apps\/third-party\/jfrog-platform\\.git@(?<currentValue>\\S+)",
        "https:\/\/repo1\\.dso\\.mil\/big-bang\/apps\/third-party\/jfrog-platform\\.git\\s+ref:\\s+tag:\\s+(?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://repo1.dso.mil/big-bang/apps/third-party/jfrog-platform.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "zarfcomponents",
      "versioningTemplate": "regex:^v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-bb.(?<build>\\d+)$"
    },
    // Jenkins version
    {
      "fileMatch": [
        ".*\\.yaml"
      ],
      "matchStrings": [
        "https:\/\/repo1\\.dso\\.mil\/big-bang\/product\/community\/jenkins\\.git@refs\/tags\/(?<currentValue>\\S+)",
        "https:\/\/repo1\\.dso\\.mil\/big-bang\/product\/community\/jenkins\\.git@(?<currentValue>\\S+)",
        "https://repo1\\.dso\\.mil/big-bang/product/community/jenkins\\.git\\s+ref:\\s+tag:\\s+(?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://repo1.dso.mil/big-bang/product/community/jenkins.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "zarfcomponents",
      "versioningTemplate": "regex:^v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-bb.(?<build>\\d+)$"
    },
    // Redis version
    {
      "fileMatch": [
        ".*\\.yaml"
      ],
      "matchStrings": [
        "https:\/\/repo1\\.dso\\.mil\/big-bang\/product\/packages\/redis\\.git@(?<currentValue>\\S+)",
        "https://repo1\\.dso\\.mil/big-bang/product/packages/redis\\.git\\s+ref:\\s+tag:\\s+(?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://repo1.dso.mil/big-bang/product/packages/redis.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "zarfcomponents",
      "versioningTemplate": "regex:^v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-bb.(?<build>\\d+)$"
    },
    // Zarf version
    {
      "fileMatch": [
        ".*\\.yaml",
        "^Makefile$"
      ],
      "matchStrings": [
        "https:\/\/raw\\.githubusercontent\\.com\/defenseunicorns\/zarf\/(?<currentValue>\\S+)\/zarf\\.schema\\.json",
        "ZARF_VERSION := (?<currentValue>\\S+)"
      ],
      "depNameTemplate": "https://github.com/defenseunicorns/zarf.git",
      "datasourceTemplate": "git-tags",
      "depTypeTemplate": "zarfbin"
    },
    // Build Harness version
    {
      "fileMatch": [
        "^Makefile$"
      ],
      "matchStrings": [
        "BUILD_HARNESS_REPO := (?<depName>\\S+)\\nBUILD_HARNESS_VERSION := (?<currentValue>\\S+)"
      ],
      "datasourceTemplate": "docker",
      "depTypeTemplate": "buildharness"
    }
  ]
}
