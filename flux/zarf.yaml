# yaml-language-server: $schema=https://raw.githubusercontent.com/defenseunicorns/zarf/v0.27.0/zarf.schema.json
kind: ZarfPackageConfig
metadata:
  name: "flux"
  description: "Zarf flux package"
  architecture: amd64

variables:
  - name: HELM_CONTROLLER_CPU
    default: "300m"
  - name: HELM_CONTROLLER_MEM
    default: "1Gi"
  - name: KUSTOMIZE_CONTROLLER_CPU
    default: "100m"
  - name: KUSTOMIZE_CONTROLLER_MEM
    default: "600Mi"
  - name: NOTIFICATION_CONTROLLER_CPU
    default: "100m"
  - name: NOTIFICATION_CONTROLLER_MEM
    default: "200Mi"
  - name: SOURCE_CONTROLLER_CPU
    default: "100m"
  - name: SOURCE_CONTROLLER_MEM
    default: "384Mi"


components:
  - name: flux
    required: true
    manifests:
      - name: flux-installer
        # This will be built on the package create side and deployed as a regular manifest on package deploy
        kustomizations:
          - https://repo1.dso.mil/big-bang/bigbang.git/base/flux?ref=2.3.0
          - https://repo1.dso.mil/big-bang/bigbang.git/base/flux?ref=2.3.0
    images:
      # flux - flux
      - registry1.dso.mil/ironbank/fluxcd/source-controller:v0.36.1
      - registry1.dso.mil/ironbank/fluxcd/helm-controller:v0.32.1
      - registry1.dso.mil/ironbank/fluxcd/kustomize-controller:v0.35.1
      - registry1.dso.mil/ironbank/fluxcd/notification-controller:v0.33.0

  - name: flux-resources
    required: true
    actions:
      onDeploy:
        before:
          # Set new limits and requests for the helm-controller deployment
          - cmd: kubectl get deployment -n flux-system helm-controller -o=jsonpath='{.spec.template.spec.containers[0].resources.limits.cpu}'
            setVariables:
              - name: HELM_CONTROLLER_CPU_PREV
          - cmd: kubectl get deployment -n flux-system helm-controller -o=jsonpath='{.spec.template.spec.containers[0].resources.limits.memory}'
            setVariables:
              - name: HELM_CONTROLLER_MEM_PREV
          - cmd: 'kubectl get deployment -n flux-system helm-controller -o=yaml | sed "s/cpu: ${ZARF_TMPL_HELM_CONTROLLER_CPU_PREV}/cpu: ${ZARF_TMPL_HELM_CONTROLLER_CPU}/" | sed "s/memory: ${ZARF_TMPL_HELM_CONTROLLER_MEM_PREV}/memory: ${ZARF_TMPL_HELM_CONTROLLER_MEM}/" | kubectl apply -f -'

          # Set new limits and requests for the kustomize-controller deployment
          - cmd: kubectl get deployment -n flux-system kustomize-controller -o=jsonpath='{.spec.template.spec.containers[0].resources.limits.cpu}'
            setVariables:
              - name: KUSTOMIZE_CONTROLLER_CPU_PREV
          - cmd: kubectl get deployment -n flux-system kustomize-controller -o=jsonpath='{.spec.template.spec.containers[0].resources.limits.memory}'
            setVariables:
              - name: KUSTOMIZE_CONTROLLER_MEM_PREV
          - cmd: 'kubectl get deployment -n flux-system kustomize-controller -o=yaml | sed "s/cpu: ${ZARF_TMPL_KUSTOMIZE_CONTROLLER_CPU_PREV}/cpu: ${ZARF_TMPL_KUSTOMIZE_CONTROLLER_CPU}/" | sed "s/memory: ${ZARF_TMPL_KUSTOMIZE_CONTROLLER_MEM_PREV}/memory: ${ZARF_TMPL_KUSTOMIZE_CONTROLLER_MEM}/" | kubectl apply -f -'

          # Set new limits and requests for the notification-controller deployment
          - cmd: kubectl get deployment -n flux-system notification-controller -o=jsonpath='{.spec.template.spec.containers[0].resources.limits.cpu}'
            setVariables:
              - name: NOTIFICATION_CONTROLLER_CPU_PREV
          - cmd: kubectl get deployment -n flux-system notification-controller -o=jsonpath='{.spec.template.spec.containers[0].resources.limits.memory}'
            setVariables:
              - name: NOTIFICATION_CONTROLLER_MEM_PREV
          - cmd: 'kubectl get deployment -n flux-system notification-controller -o=yaml | sed "s/cpu: ${ZARF_TMPL_NOTIFICATION_CONTROLLER_CPU_PREV}/cpu: ${ZARF_TMPL_NOTIFICATION_CONTROLLER_CPU}/" | sed "s/memory: ${ZARF_TMPL_NOTIFICATION_CONTROLLER_MEM_PREV}/memory: ${ZARF_TMPL_NOTIFICATION_CONTROLLER_MEM}/" | kubectl apply -f -'

          # Set new limits and requests for the source-controller deployment
          - cmd: kubectl get deployment -n flux-system source-controller -o=jsonpath='{.spec.template.spec.containers[0].resources.limits.cpu}'
            setVariables:
              - name: SOURCE_CONTROLLER_CPU_PREV
          - cmd: kubectl get deployment -n flux-system source-controller -o=jsonpath='{.spec.template.spec.containers[0].resources.limits.memory}'
            setVariables:
              - name: SOURCE_CONTROLLER_MEM_PREV
          - cmd: 'kubectl get deployment -n flux-system source-controller -o=yaml | sed "s/cpu: ${ZARF_TMPL_SOURCE_CONTROLLER_CPU_PREV}/cpu: ${ZARF_TMPL_SOURCE_CONTROLLER_CPU}/" | sed "s/memory: ${ZARF_TMPL_SOURCE_CONTROLLER_MEM_PREV}/memory: ${ZARF_TMPL_SOURCE_CONTROLLER_MEM}/" | kubectl apply -f -'
