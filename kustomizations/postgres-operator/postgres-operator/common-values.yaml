configGeneral:
  # Without enable_lazy_spilo_upgrade set to true the pods will do a rolling upgrade every resync_period, which by
  # default is 30 minutes. We have experienced issues with database corruption when this happens. Deciding instead
  # to do lazy upgrading which means the StatefulSet is modified but a rolling update is not automatically triggered.
  enable_lazy_spilo_upgrade: true
configPostgresPodResources:
  default_cpu_request: "100m"
  default_memory_request: "100Mi"
  default_cpu_limit: "500m"
  default_memory_limit: "500Mi"
  min_cpu_limit: "250m"
  min_memory_limit: "250Mi"
configConnectionPooler:
  connection_pooler_default_cpu_request: "100m"
  connection_pooler_default_cpu_limit: "500m"
  connection_pooler_default_memory_request: "100Mi"
  connection_pooler_default_memory_limit: "100Mi"
configKubernetes:
  # If you are specifying a storage class backed by EFS, ensure it is configured with uid: 101, gid: 103
  spilo_runasuser: 101
  spilo_runasgroup: 103
  spilo_fsgroup: 103
  # Uncomment this if you are using PVCs backed by EFS, since EFS has infinite size we never need to resize the PVC
#  storage_resize_mode: "off"
resources:
  requests:
    cpu: "100m"
    memory: "250Mi"
  limits:
    cpu: "1"
    memory: "2000Mi"
securityContext:
  runAsUser: 1000
  runAsNonRoot: true
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
