controller:
  image: "${ZARF_REGISTRY}/jenkins/jenkins"
  tag: "2.319.1-jdk11"
  imagePullSecretName: "private-registry"
  adminUser: "admin"
  adminPassword: "admin"
  jenkinsUrl: "https://jenkins.bigbang.dev"
  disableRememberMe: true
  # containerSecurityContext:
  #   runAsUser: 1000
  #   runAsGroup: 1000
  #   # readOnlyRootFilesystem needs to be false because of the way Jenkins does Configuration as Code, by modifying files in the folder /var/jenkins_home/casc_configs
  #   readOnlyRootFilesystem: false
  #   allowPrivilegeEscalation: false
  resources:
    requests:
      cpu: "50m"
      memory: "256Mi"
    limits:
      cpu: "2000m"
      memory: "4096Mi"
  initContainerResources:
    requests:
      cpu: "50m"
      memory: "256Mi"
    limits:
      cpu: "2000m"
      memory: "4096Mi"
  installPlugins:
    # Top level plugins
    - kubernetes:3580.v78271e5631dc
    - workflow-aggregator:2.7
    - git:4.11.0
    - configuration-as-code:1414.v878271fc496f
    - gitlab-oauth:1.15
    # Dependencies of the top level plugins. They need to be specified explicitly or the top level plugins
    # will try to grab the latest versions of them, which will break other dependency trees. It sucks
    # to have to maintain this list, but it is the only way that this author knows for how to make
    # consistently repeatable Jenkins deployments. This list is logged in the Jenkins init container
    # when Jenkins starts up. The list below needs to be updated when ever the list of top level plugins
    # changes. To update it, delete the list below, run the deployment, and get the new list of all
    # plugins from the init container logs.
    # To fix the formatting:
    # Use this find regex:           - (?<name>.*?) (?<version>.*?)$
    # And this replace regex:        - ${name}:${version}
    - pipeline-milestone-step:100.v60a_03cd446e1
    - snakeyaml-api:1.30.1
    - trilead-api:1.57.v6e90e07157e1
    - workflow-multibranch:711.vdfef37cda_816
    - javax-mail-api:1.6.2-5
    - pipeline-stage-tags-metadata:1.9.3
    - javax-activation-api:1.2.0-2
    - plugin-util-api:2.16.0
    - git-client:3.11.0
    - variant:1.4
    - scm-api:602.v6a_81757a_31d2
    - kubernetes-client-api:5.12.1-187.v577c3e368fb_6
    - pipeline-stage-step:291.vf0a8a7aeeb50
    - font-awesome-api:6.0.0-1
    - pipeline-model-extensions:1.9.3
    - bootstrap4-api:4.6.0-3
    - workflow-cps-global-lib:570.v21311f4951f8
    - workflow-support:813.vb_d7c3d2984a_0
    - mailer:408.vd726a_1130320
    - checks-api:1.7.2
    - jackson2-api:2.13.2.20220328-273.v11d70a_b_a_1a_52
    - workflow-scm-step:2.13
    - pipeline-model-api:1.9.3
    - popper-api:1.16.1-2
    - lockable-resources:2.14
    - pipeline-input-step:447.v95e5a_6e3502a_
    - metrics:4.1.6.1
    - jquery3-api:3.6.0-2
    - git-server:1.10
    - credentials-binding:1.27.1
    - kubernetes-credentials:0.9.0
    - pipeline-build-step:2.17
    - credentials:1087.1089.v2f1b_9a_b_040e4
    - pipeline-model-definition:1.9.3
    - caffeine-api:2.9.2-29.v717aac953ff3
    - workflow-step-api:622.vb_8e7c15b_c95a_
    - plain-credentials:1.8
    - matrix-project:758.v7a_ea_491852f3
    - bouncycastle-api:2.25
    - ace-editor:1.1
    - authentication-tokens:1.4
    - workflow-durable-task-step:1128.v8c259d125340
    - bootstrap5-api:5.1.3-6
    - ssh-credentials:1.19
    - cloudbees-folder:6.714.v79e858ef76a_2
    - durable-task:495.v29cd95ec10f2
    - popper2-api:2.11.5-1
    - workflow-basic-steps:2.24
    - workflow-job:1145.v7f2433caa07f
    - jsch:0.1.55.2
    - junit:1.54
    - echarts-api:5.3.2-1
    - structs:308.v852b473a2b8c
    - apache-httpcomponents-client-4-api:4.5.13-1.0
    - workflow-cps:2660.vb_c0412dc4e6d
    - sshd:3.228.v4c9f9e652c86
    - display-url-api:2.3.5
    - script-security:1138.v8e727069a_025
    - branch-api:2.1044.v2c007e51b_87f
    - workflow-api:1143.v2d42f1e9dea_5
  overwritePlugins: true
  sidecars:
    configAutoReload:
      enabled: false
      image: "${ZARF_REGISTRY}/kiwigrid/k8s-sidecar:1.14.2"
  JCasC:
    defaultConfig: false
    configScripts:
      authorizationStrategy: |-
        # WHEN SWITCHING TO GITLAB SSO COMMENT OUT THIS SECTION
        # =====================================================
        loggedInUsersCanDoAnything:
          allowAnonymousRead: false
        # =====================================================
        # WHEN SWITCHING TO GITLAB SSO UNCOMMENT THIS SECTION
        # =====================================================
        # gitLab:
        #   # Comma separated list of organization names that if a user is registered with will have admin rights.
        #   adminOrganizationNames: ""
        #   # Comma separated list of user names that when authenticated should be given administrator rights.
        #   adminUserNames: "root"
        #   # If true, will grant the ViewStatus permission to everyone that connects to the Jenkins instance. Anyone will be able to see the status
        #   # of a job, but nothing else. This is useful especially for plugins like Embeddable Build Status Plugin
        #   allowAnonymousJobStatusPermission: false
        #   # If true, will grant the READ permission to everyone that connects to the Jenkins instance. Anyone will be able to see all the jobs
        #   # and related state but only authenticated users will be able to BUILD the jobs.
        #   allowAnonymousReadPermission: false
        #   # If true, opens a hole in security to allow unauthenticated access to /cc.xml at the root of the server. This URI provides monitoring
        #   # capability to a range of desktop clients. Enabling this option reveals limited information about your build to the whole world. Use with care.
        #   allowCcTrayPermission: false
        #   # The GitLab plugin has a web hook trigger that can be used to notify Jenkins when a push has occurred and that a build should also happen.
        #   # By enabling this permission you grant anonymous external READ access to the /gitlab-webhook URL so that the request can be received.
        #   # The GitLab plugin checks that a change has actually occurred so this should be safe to enable.
        #   allowGitlabWebHookPermission: true
        #   # If true, will grant the create job permission to all authenticated GitLab users even those that aren't members of the declared organizations.
        #   authenticatedUserCreateJobPermission: true
        #   # If true, will grant READ permission to all authenticated GitLab users even those that aren't members of the declared organizations.
        #   authenticatedUserReadPermission: true
        #   # If true, will grant all authenticated users the ability to stop building a job
        #   authenticatedUserStopBuildPermission: false
        #   # Comma separated list of organization names that if a user is registered with will have job view and build rights.
        #   organizationNames: ""
        #   # If true will use GitLab repository permissions to determine Jenkins permissions for each project.
        #   #   - Public projects - all authenticated users can READ. Only collaborators can BUILD, EDIT, CONFIGURE, or DELETE
        #   #   - Private projects - only collaborators can READ, BUILD, EDIT, CONFIGURE, or DELETE
        #   useRepositoryPermissions: true
          # =====================================================

      securityRealm: |-
        # WHEN SWITCHING TO GITLAB SSO COMMENT OUT THIS SECTION
        # =====================================================
        local:
          allowsSignup: false
          enableCaptcha: false
          users:
            - id: "$${chart-admin-username}"
              name: "Jenkins Admin"
              password: "$${chart-admin-password}"
        # =====================================================
        # WHEN SWITCHING TO GITLAB SSO UNCOMMENT THIS SECTION
        # =====================================================
        # gitLab:
        #   # The Client ID hash from the GitLab Application entry being configured. See https://gitlab.com/settings/applications.
        #   clientID: "fff486498f7ec6f636afddf8deb25f7364803b74ff51f6d5580c7c04aa534560"
        #   # The Client Secret hash from the GitLab Application entry being configured. See https://gitlab.com/settings/applications.
        #   clientSecret: "d89f21c2555203f9406a056fc6b4220aa9c7695cea4271e6fc7667c976ccf4d3"
        #   # The URL to the API root of your GitLab installation (e.g. https://gitlab.company.com. The plugin will automatically add "api/v4" suffix for you).
        #   #   - The https:// or http:// part needs to be specified
        #   #   - There should not be any trailing slash (/)
        #   #   - For GitLab Enterprise, the API URI is usually the same as the Web URI
        #   gitlabApiUri: "https://gitlab.bigbang.dev"
        #   # The URL to the web UI root of your GitLab installation (e.g. https://gitlab.company.com).
        #   #   - The https:// or http:// part needs to be specified.
        #   #   - There should not be any trailing slash (/).
        #   gitlabWebUri: "https://gitlab.bigbang.dev"
        # =====================================================

      main: |-
        jenkins:
          systemMessage: "Jenkins configured automatically by Jenkins Configuration as Code (JCasC) Plugin.\n\n"

agent:
  enabled: true
  image: "${ZARF_REGISTRY}/jenkins/inbound-agent"
  tag: "4.11-1"
  imagePullSecretName: "private-registry"
  resources:
    requests:
      cpu: "512m"
      memory: "512Mi"
    limits:
      cpu: "512m"
      memory: "512Mi"
  alwaysPullImage: true
persistence:
  enabled: true
  storageClass: "local-path"
