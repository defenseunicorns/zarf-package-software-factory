controller:
  image: "registry1.dso.mil/ironbank/opensource/jenkins/jenkins"
  tag: "2.387.2-lts"
  disableRememberMe: true
  resources:
    requests:
      cpu: "50m"
      memory: "512Mi"
    limits:
      cpu: "2000m"
      memory: "8192Mi"
  initContainerResources:
    requests:
      cpu: "50m"
      memory: "512Mi"
    limits:
      cpu: "2000m"
      memory: "8192Mi"
  installPlugins:
    # Top level plugins
    - kubernetes:3900.va_dce992317b_4
    - workflow-aggregator:596.v8c21c963d92d
    - git:5.0.0
    - configuration-as-code:1625.v27444588cc3d
    # Dependencies of the top level plugins. They need to be specified explicitly or the top level plugins
    # will try to grab the latest versions of them, which will break other dependency trees. It sucks
    # to have to maintain this list, but it is the only way that this author knows for how to make
    # consistently repeatable Jenkins deployments. This list is logged in the Jenkins init container
    # when Jenkins starts up. The list below needs to be updated when ever the list of top level plugins
    # changes. To update it, delete the list below, run the deployment, and get the new list of all
    # plugins from the init container logs.
  overwritePlugins: true
  sidecars:
    configAutoReload:
      enabled: true
      image: "registry1.dso.mil/ironbank/kiwigrid/k8s-sidecar:1.23.1"
  JCasC:
    defaultConfig: true

    configScripts:
      main: |-
        jenkins:
          systemMessage: "Jenkins configured automatically by Jenkins Configuration as Code (JCasC) Plugin.\n\n"
  probes:
    startupProbe:
      periodSeconds: 10
      failureThreshold: 30
    livenessProbe:
      initialDelaySeconds: 60
    readinessProbe:
      initialDelaySeconds: 60

agent:
  enabled: true
  image: "registry1.dso.mil/ironbank/opensource/jenkins/inbound-agent"
  tag: "3107.v665000b_51092-5"
  resources:
    requests:
      cpu: "512m"
      memory: "512Mi"
    limits:
      cpu: "512m"
      memory: "512Mi"
  alwaysPullImage: true
persistence:
  enabled: true
#  storageClass: "your-storage-class-here"
