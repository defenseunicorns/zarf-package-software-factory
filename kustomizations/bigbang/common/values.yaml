registryCredentials:
  registry: "${ZARF_REGISTRY}"
  username: "zarf-pull"
  password: "${ZARF_REGISTRY_AUTH_PULL}"

git:
  existingSecret: "private-git-server"

networkPolicies:
  enabled: true
  # When in prod use a real CIDR. Don't do this, it isn't secure.
  controlPlaneCidr: "0.0.0.0/0"
  nodeCidr: "0.0.0.0/0"
  vpcCidr: "0.0.0.0/0"

istio:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__istio-controlplane.git
  ingressGateways:
    public-ingressgateway:
      type: "LoadBalancer"
      kubernetesResourceSpec:
        # Uncomment this section if you are on EKS and need to use an Internal Load Balancer instead of the default Classic Load Balancer
#        serviceAnnotations:
#          # Use an Internal Load Balancer rather than a public one
#          service.beta.kubernetes.io/aws-load-balancer-internal: 'true'
#          # Enable cross zone load balancing
#          service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'
        resources:
          requests:
            cpu: "100m"
            memory: "512Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
  values:
    istiod:
      resources:
        requests:
          cpu: "100m"
          memory: "1Gi"
        limits:
          cpu: "500m"
          memory: "1Gi"
      hpaSpec:
        maxReplicas: 1
  gateways:
    public:
      ingressGateway: public-ingressgateway
      hosts:
        - gitlab.{{ .Values.domain }}
        - jenkins.{{ .Values.domain }}
        - jira.{{ .Values.domain }}
        - confluence.{{ .Values.domain }}
        - registry.{{ .Values.domain }}
        - artifactory.{{ .Values.domain }}
        - minio.{{ .Values.domain }}

  postRenderers:
    # This should only be needed until we upgrade to the Istio chart v1.14.2-bb.1 or later, when it is included by default as a meshConfig
    # Ref: https://repo1.dso.mil/platform-one/big-bang/apps/core/istio-controlplane/-/merge_requests/119
    - kustomize:
        patchesJson6902:
          - target:
              group: networking.istio.io
              version: v1beta1
              kind: Gateway
              name: public
              namespace: istio-system
            patch:
              - op: add
                path: "/spec/servers/1/tls/minProtocolVersion"
                value: "TLSV1_2"

istiooperator:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__istio-operator.git
  values:
    hub: "${ZARF_REGISTRY}/ironbank/opensource/istio"
    operator:
      resources:
        limits:
          cpu: "500m"
          memory: "256Mi"
        requests:
          cpu: "100m"
          memory: "256Mi"

jaeger:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__jaeger.git
  values:
    istio:
      mtls:
        mode: PERMISSIVE
    jaeger:
      spec:
        allInOne:
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "128Mi"
        collector:
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "128Mi"
    resources:
      limits:
        cpu: "500m"
        memory: "128Mi"
      requests:
        cpu: "100m"
        memory: "128Mi"

kiali:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__kiali.git
  values:
    istio:
      mtls:
        mode: PERMISSIVE
    resources:
      requests:
        cpu: "100m"
        memory: "512Mi"
      limits:
        cpu: "500m"
        memory: "512Mi"
    cr:
      spec:
        deployment:
          resources:
            requests:
              cpu: "200m"
              memory: "512Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"

clusterAuditor:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__cluster-auditor.git
  values:
    istio:
      mtls:
        mode: PERMISSIVE
    resources:
      requests:
        cpu: "100m"
        memory: "512Mi"
      limits:
        cpu: "500m"
        memory: "512Mi"

gatekeeper:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__policy.git
  values:
    istio:
      mtls:
        mode: PERMISSIVE
    controllerManager:
      resources:
        limits:
          cpu: "2"
          memory: "4Gi"
        requests:
          cpu: "250m"
          memory: "1Gi"
    audit:
      resources:
        limits:
          cpu: "2"
          memory: "4Gi"
        requests:
          cpu: "250m"
          memory: "1Gi"
    violations:
      allowedDockerRegistries:
        match:
          # Make Kind/K3d happy
          excludedNamespaces:
            - "kube-sytem"
            - "local-path-storage"
        parameters:
          repos:
            - "${ZARF_REGISTRY}"
          excludedResources:
            # K3s needs these due to how it creates services of type "LoadBalancer"
            - "istio-system/lb-port-.*"
            - "istio-system/svclb-.*"
            # K3s needs this if you are doing K3s-specific "HelmRelease"-type CRDs
            - ".*/helm-install-.*"
            - ".*/helm"
      allowedHostFilesystem:
        match:
          # Make Kind/K3d happy
          excludedNamespaces:
            - "kube-sytem"
            - "local-path-storage"
      hostNetworking:
        parameters:
          excludedResources:
            # K3s needs these due to how it creates services of type "LoadBalancer"
            - "istio-system/svclb-.*"
            - "istio-system/lb-port-.*"
      restrictedTaint:
        match:
          # Make Kind/K3d happy
          excludedNamespaces:
            - "kube-sytem"
            - "local-path-storage"
      volumeTypes:
        match:
          # Make Kind/K3d happy
          excludedNamespaces:
            - "kube-sytem"
            - "local-path-storage"

logging:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__elasticsearch-kibana.git
  values:
    istio:
      mtls:
        mode: PERMISSIVE
    kibana:
      count: 1
      resources:
        requests:
          memory: "1Gi"
          cpu: "100m"
        limits:
          memory: "1Gi"
          cpu: "500m"
    elasticsearch:
      master:
        count: 1
        # Uncomment this if you want to specify a specific storageclass
#        persistence:
#          storageClassName: "your-storage-class-name-here"
        resources:
          limits:
            cpu: "500m"
            memory: "3Gi"
          requests:
            cpu: "100m"
            memory: "3Gi"
      data:
        count: 1
        # Uncomment this if you want to specify a specific storageclass
#        persistence:
#          storageClassName: "your-storage-class-name-here"
        resources:
          limits:
            cpu: "500m"
            memory: "3Gi"
          requests:
            cpu: "100m"
            memory: "3Gi"

eckoperator:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__eck-operator.git
  values:
    istio:
      mtls:
        mode: PERMISSIVE
    resources:
      limits:
        cpu: "200m"
        memory: "256Mi"
      requests:
        cpu: "100m"
        memory: "256Mi"

fluentbit:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__fluentbit.git
  values:
    istio:
      mtls:
        mode: PERMISSIVE
    resources:
      limits:
        cpu: "500m"
        memory: "750Mi"
      requests:
        cpu: "100m"
        memory: "256Mi"

monitoring:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__monitoring.git
  values:
    istio:
      mtls:
        mode: PERMISSIVE
    cleanUpgrade:
      resources:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "256Mi"
          cpu: "200m"
    alertmanager:
      alertmanagerSpec:
        resources:
          limits:
            cpu: "500m"
            memory: "256Mi"
          requests:
            cpu: "100m"
            memory: "256Mi"
    grafana:
      resources:
        limits:
          cpu: "500m"
          memory: "512Mi"
        requests:
          cpu: "100m"
          memory: "256Mi"
      sidecar:
        resources:
          limits:
            cpu: "500m"
            memory: "100Mi"
          requests:
            cpu: "50m"
            memory: "50Mi"
      downloadDashboards:
        resources:
          limits:
            cpu: "20m"
            memory: "20Mi"
          requests:
            cpu: "20m"
            memory: "20Mi"
    kube-state-metrics:
      resources:
        limits:
          cpu: "500m"
          memory: "128Mi"
        requests:
          cpu: "10m"
          memory: "128Mi"
    prometheus-node-exporter:
      resources:
        limits:
          cpu: "500m"
          memory: "128Mi"
        requests:
          cpu: "100m"
          memory: "128Mi"
    prometheusOperator:
      admissionWebhooks:
        patch:
          resources:
            limits:
              cpu: "100m"
              memory: "128Mi"
            requests:
              cpu: "50m"
              memory: "128Mi"
        cleanupProxy:
          resources:
            limits:
              cpu: "100m"
              memory: "128Mi"
            requests:
              cpu: "50m"
              memory: "128Mi"
      resources:
        limits:
          cpu: "500m"
          memory: "512Mi"
        requests:
          cpu: "100m"
          memory: "512Mi"
      prometheusConfigReloader:
        resources:
          requests:
            cpu: "50m"
            memory: "128Mi"
          limits:
            cpu: "100m"
            memory: "128Mi"
    prometheus:
      prometheusSpec:
        resources:
          limits:
            cpu: "300m"
            memory: "2Gi"
          requests:
            cpu: "100m"
            memory: "2Gi"

twistlock:
  # Disabling Twistlock for now since Big Bang now needs a license to be specified for Twistlock to initialize successfully. Will re-evaluate turning it back on later, or possibly swap it out for Neuvector once that becomes available.
  enabled: false
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__security-tools__twistlock.git
  values:
    istio:
      mtls:
        mode: PERMISSIVE
    console:
    resources:
      limits:
        memory: "1Gi"
        cpu: "500m"
      requests:
        memory: "1Gi"
        cpu: "100m"

addons:
  minioOperator:
    enabled: true
    git:
      repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__application-utilities__minio-operator.git
    values:
      operator:
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
            ephemeral-storage: 500Mi
          limits:
            cpu: 200m
            memory: 256Mi
      istio:
        enabled: true
        mtls:
          mode: PERMISSIVE

  minio:
    enabled: true
    git:
      repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__application-utilities__minio.git
    values:
      istio:
        mtls:
          mode: PERMISSIVE
      # https://github.com/minio/operator/blob/master/docs/crd.adoc
      tenants:
        # Required to be here due to a weird quirk in bucket creation. See https://github.com/minio/operator/issues/1002#issuecomment-1028394242
        users:
          - name: minio-user-credentials
        # Pre-create buckets that will be needed for various services that will use MinIO
        buckets:
          # git-lfs bucket
          - name: "git-lfs"
            region: "us-east-1"
            objectLock: true
          # gitlab-artifacts bucket
          - name: "gitlab-artifacts"
            region: "us-east-1"
            objectLock: true
          # gitlab-uploads bucket
          - name: "gitlab-uploads"
            region: "us-east-1"
            objectLock: true
          # gitlab-packages bucket
          - name: "gitlab-packages"
            region: "us-east-1"
            objectLock: true
          # gitlab-mr-diffs bucket
          - name: "gitlab-mr-diffs"
            region: "us-east-1"
            objectLock: true
          # gitlab-terraform-state bucket
          - name: "gitlab-terraform-state"
            region: "us-east-1"
            objectLock: true
          # gitlab-ci-secure-files bucket
          - name: "gitlab-ci-secure-files"
            region: "us-east-1"
            objectLock: true
          # gitlab-dependency-proxy bucket
          - name: "gitlab-dependency-proxy"
            region: "us-east-1"
            objectLock: true
          # gitlab-backups bucket
          - name: "gitlab-backups"
            region: "us-east-1"
            objectLock: true
          # tmp bucket
          - name: "tmp"
            region: "us-east-1"
            objectLock: true
          # gitlab-registry bucket
          - name: "gitlab-registry"
            region: "us-east-1"
            objectLock: true
          # gitlab-pages bucket
          - name: "gitlab-pages"
            region: "us-east-1"
            objectLock: true
        pools:
          ## Servers specifies the number of MinIO Tenant Pods / Servers in this pool.
          ## For standalone mode, supply 1. For distributed mode, supply 4 or more.
          ## Note that the operator does not support upgrading from standalone to distributed mode.
          - servers: 3
            ## volumesPerServer specifies the number of volumes attached per MinIO Tenant Pod / Server.
            volumesPerServer: 2
            ## size specifies the capacity per volume
            size: 5Gi
            ## storageClass specifies the storage class name to be used for this pool
            storageClassName: ""
            ## Used to specify a toleration for a pod
            tolerations: {}
            ## nodeSelector parameters for MinIO Pods. It specifies a map of key-value pairs. For the pod to be
            ## eligible to run on a node, the node must have each of the
            ## indicated key-value pairs as labels.
            ## Read more here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
            nodeSelector: {}
            ## Affinity settings for MinIO pods. Read more about affinity
            ## here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity.
            affinity: {}
            ## Configure resource requests and limits for MinIO containers
            resources:
              requests:
                cpu: 250m
                memory: 2Gi
              limits:
                cpu: 250m
                memory: 2Gi
            ## Configure security context
            ## BB Note: Defaults for Ironbank image are 1001 for user, group, and fsGroup
            securityContext:
              runAsUser: 1001
              runAsGroup: 1001
              fsGroup: 1001
              runAsNonRoot: true

  gitlab:
    enabled: true
    git:
      repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__developer-tools__gitlab.git
    istio:
      injection: disabled
    objectStorage:
      # -- Type of object storage to use for Gitlab, setting to s3 will assume an external, pre-existing object storage is to be used.
      # Entering connection info will enable this option and will auto-create any required secrets
      type: "minio" # supported types are "s3" or "minio"
      # -- S3 compatible endpoint to use for connection information.
      # examples: "https://s3.amazonaws.com" "https://s3.us-gov-west-1.amazonaws.com" "http://minio.minio.svc.cluster.local:9000"
      endpoint: https://minio.bigbang.dev:443
      # -- S3 compatible region to use for connection information.
      region: "us-east-1"
      # -- Access key for connecting to object storage endpoint.
      # -- If using accessKey and accessSecret, the iamProfile must be left as an empty string: ""
      # accessKey: "" -- Added in environment-bb/values.yaml
      # -- Secret key for connecting to object storage endpoint.
      # Unencoded string data. This should be placed in the secret values and then encrypted
      # accessSecret: "" -- Added in environment-bb/values.yaml
      # -- Bucket prefix to use for identifying buckets.
      # Example: "prod" will produce "prod-gitlab-bucket"
      bucketPrefix: ""
      # -- NOTE: Current bug with AWS IAM Profiles and Object Storage where only artifacts are stored. Fixed in Gitlab 14.5
      # -- Name of AWS IAM profile to use.
      # -- If using an AWS IAM profile, the accessKey and accessSecret values must be left as empty strings eg: ""
      iamProfile: ""
    values:
      istio:
        mtls:
          mode: PERMISSIVE
      global:
        registry:
          bucket: "gitlab-registry"
        psql:
          host: "acid-gitlab.gitlab.svc.cluster.local"
          port: 5432
          database: "postgres"
          username: "postgres"
          password:
            secret: "postgres.acid-gitlab.credentials.postgresql.acid.zalan.do"
            key: "password"
        # ## https://docs.gitlab.com/charts/installation/deployment#outgoing-email
        # ## Example Outgoing email server settings
        # smtp:
        #   enabled: true
        #   address: smtp.example.com
        #   port: 587
        #   user_name: "user@example.com"
        #   ## https://docs.gitlab.com/charts/installation/secrets#smtp-password
        #   password:
        #     secret: "gitlab-smtp-credentials"
        #     key: "password"
        #   domain: "example.com"
        #   authentication: "login"
        #   starttls_auto: true
        #   openssl_verify_mode: "peer"
        #   pool: false
        # ## https://docs.gitlab.com/charts/installation/deployment#outgoing-email
        # ## Email persona used in email sent by GitLab
        # email:
        #   from: "gitlabadmin@example.com"
        #   display_name: "GitLab Admin"
        #   reply_to: "gitlabadmin@example.com"
        #   subject_suffix: "gitlab"
      upgradeCheck:
        resources:
          requests:
            cpu: 500m
            memory: 500Mi
          limits:
            cpu: 500m
            memory: 500Mi
      redis:
        metrics:
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 256Mi
        master:
          # Uncomment this if you want to specify a particular storage class
#          persistence:
#            storageClass: "your-storage-class-name-here"
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 256Mi
        # :face_vomiting: TODO: Upstream merge request to make the naming more inclusive
        slave:
          # Uncomment this if you want to specify a particular storage class
#          persistence:
#            storageClass: "your-storage-class-name-here"
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 256Mi
        sentinel:
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 256Mi
        volumePermissions:
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 256Mi
        sysctlImage:
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 256Mi
      postgresql:
        install: false
      registry:
        init:
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
        resources:
          limits:
            cpu: 200m
            memory: 1024Mi
          requests:
            cpu: 200m
            memory: 1024Mi
      shared-secrets:
        resources:
          requests:
            cpu: 300m
            memory: 200Mi
          limits:
            cpu: 300m
            memory: 200Mi
      gitlab:
        toolbox:
          init:
            resources:
              requests:
                cpu: 200m
                memory: 200Mi
              limits:
                cpu: 200m
                memory: 200Mi
          resources:
            requests:
              cpu: 2
              memory: 3.5Gi
            limits:
              cpu: 2
              memory: 3.5Gi
          backups:
            cron:
              resources:
                requests:
                  cpu: 350m
                  memory: 350Mi
                limits:
                  cpu: 350m
                  memory: 350Mi
        gitlab-exporter:
          init:
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
              requests:
                cpu: 200m
                memory: 200Mi
          resources:
            limits:
              cpu: 150m
              memory: 200Mi
            requests:
              cpu: 150m
              memory: 200Mi
        migrations:
          init:
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
              requests:
                cpu: 200m
                memory: 200Mi
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 1Gi
        webservice:
          init:
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
              requests:
                cpu: 200m
                memory: 200Mi
          resources:
            limits:
              cpu: 600m
              memory: 2.5Gi
            requests:
              cpu: 600m
              memory: 2.5Gi
          workhorse:
            resources:
              limits:
                cpu: 600m
                memory: 2.5Gi
              requests:
                cpu: 600m
                memory: 2.5Gi
        sidekiq:
          init:
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
              requests:
                cpu: 200m
                memory: 200Mi
          resources:
            requests:
              memory: 3Gi
              cpu: 1500m
            limits:
              memory: 3Gi
              cpu: 1500m
        gitaly:
          init:
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
              requests:
                cpu: 200m
                memory: 200Mi
          resources:
            requests:
              cpu: 400m
              memory: 600Mi
            limits:
              cpu: 400m
              memory: 600Mi
          # Uncomment this if you want to specify a particular storage class
#          persistence:
#            storageClass: "your-storage-class-name-here"
        gitlab-shell:
          init:
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
              requests:
                cpu: 200m
                memory: 200Mi
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 300m
              memory: 300Mi
        praefect:
          init:
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
              requests:
                cpu: 200m
                memory: 200Mi
          resources:
            requests:
              cpu: 1
              memory: 1Gi
            limits:
              cpu: 1
              memory: 1Gi
      minio:
        init:
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
        # Uncomment if you want to specify a particular storage class.
        # WARNING: By default The MinIO container runs as uid: 1000, gid: 0.
        # You may need to configure a storage class with uid: 1000, gid: 0 or you may get "permission denied" errors.
#        persistence:
#          enabled: true
#          accessMode: ReadWriteOnce
#          storageClass: "your-storage-class-name-here"
#          size: 1Gi
        resources:
          limits:
            cpu: 200m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 300Mi
  gitlabRunner:
    enabled: true
    git:
      repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__developer-tools__gitlab-runner.git
    values:
      istio:
        mtls:
          mode: PERMISSIVE
      resources:
        limits:
          memory: 256Mi
          cpu: 200m
        requests:
          memory: 256Mi
          cpu: 200m
