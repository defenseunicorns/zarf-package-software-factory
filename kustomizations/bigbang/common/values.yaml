registryCredentials:
  registry: "${ZARF_REGISTRY}"
  username: "zarf-pull"
  password: "${ZARF_REGISTRY_AUTH_PULL}"

git:
  existingSecret: "private-git-server"

networkPolicies:
  enabled: true
  # When in prod use a real CIDR. Don't do this, it isn't secure.
  controlPlaneCidr: "0.0.0.0/0"
  nodeCidr: "0.0.0.0/0"
  vpcCidr: "0.0.0.0/0"

istio:
  enabled: true
  ingressGateways:
    public-ingressgateway:
      type: "LoadBalancer"
      kubernetesResourceSpec:
        resources:
          requests:
            cpu: "100m"
            memory: "512Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
  values:
    istiod:
      resources:
        requests:
          cpu: "100m"
          memory: "1Gi"
        limits:
          cpu: "500m"
          memory: "1Gi"
      hpaSpec:
        maxReplicas: 1
  gateways:
    public:
      ingressGateway: public-ingressgateway
      hosts:
        - gitlab.{{ .Values.domain }}
        - jenkins.{{ .Values.domain }}
        - jira.{{ .Values.domain }}
        - confluence.{{ .Values.domain }}
        - registry.{{ .Values.domain }}

istiooperator:
  enabled: true
  values:
    hub: "${ZARF_REGISTRY}/ironbank/opensource/istio"
    operator:
      resources:
        limits:
          cpu: "500m"
          memory: "256Mi"
        requests:
          cpu: "100m"
          memory: "256Mi"

jaeger:
  enabled: true
  values:
    jaeger:
      spec:
        allInOne:
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "128Mi"
        collector:
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "128Mi"
    resources:
      limits:
        cpu: "500m"
        memory: "128Mi"
      requests:
        cpu: "100m"
        memory: "128Mi"

kiali:
  enabled: true
  values:
    resources:
      requests:
        cpu: "100m"
        memory: "256Mi"
      limits:
        cpu: "500m"
        memory: "256Mi"
    cr:
      spec:
        deployment:
          resources:
            requests:
              cpu: "100m"
              memory: "368Mi"
            limits:
              cpu: "500m"
              memory: "368Mi"

clusterAuditor:
  enabled: true
  values:
    resources:
      requests:
        cpu: "100m"
        memory: "512Mi"
      limits:
        cpu: "500m"
        memory: "512Mi"

gatekeeper:
  enabled: true
  flux:
    install:
      remediation:
        retries: -1
    upgrade:
      remediation:
        strategy: "uninstall"
  values:
    controllerManager:
      resources:
        limits:
          cpu: "2"
          memory: "4Gi"
        requests:
          cpu: "250m"
          memory: "1Gi"
    audit:
      resources:
        limits:
          cpu: "2"
          memory: "4Gi"
        requests:
          cpu: "250m"
          memory: "1Gi"
    violations:
      allowedDockerRegistries:
        match:
          # Make Kind/K3d happy
          excludedNamespaces:
            - "kube-sytem"
            - "local-path-storage"
        parameters:
          repos:
            - "${ZARF_REGISTRY}"
          excludedResources:
            # K3s needs these due to how it creates services of type "LoadBalancer"
            - "istio-system/lb-port-.*"
            - "istio-system/svclb-.*"
            # K3s needs this if you are doing K3s-specific "HelmRelease"-type CRDs
            - ".*/helm-install-.*"
            - ".*/helm"
      allowedHostFilesystem:
        match:
          # Make Kind/K3d happy
          excludedNamespaces:
            - "kube-sytem"
            - "local-path-storage"
      hostNetworking:
        parameters:
          excludedResources:
            # K3s needs these due to how it creates services of type "LoadBalancer"
            - "istio-system/svclb-.*"
            - "istio-system/lb-port-.*"
      restrictedTaint:
        match:
          # Make Kind/K3d happy
          excludedNamespaces:
            - "kube-sytem"
            - "local-path-storage"
      volumeTypes:
        match:
          # Make Kind/K3d happy
          excludedNamespaces:
            - "kube-sytem"
            - "local-path-storage"

logging:
  enabled: true
  values:
    kibana:
      count: 1
      resources:
        requests:
          memory: "1Gi"
          cpu: "100m"
        limits:
          memory: "1Gi"
          cpu: "500m"
    elasticsearch:
      master:
        count: 1
        resources:
          limits:
            cpu: "500m"
            memory: "3Gi"
          requests:
            cpu: "100m"
            memory: "3Gi"
      data:
        count: 1
        resources:
          limits:
            cpu: "500m"
            memory: "3Gi"
          requests:
            cpu: "100m"
            memory: "3Gi"

eckoperator:
  enabled: true
  values:
    resources:
      limits:
        cpu: "200m"
        memory: "256Mi"
      requests:
        cpu: "100m"
        memory: "256Mi"

fluentbit:
  enabled: true
  values:
    resources:
      limits:
        cpu: "500m"
        memory: "750Mi"
      requests:
        cpu: "100m"
        memory: "256Mi"

monitoring:
  enabled: true
  values:
    cleanUpgrade:
      resources:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "256Mi"
          cpu: "200m"
    alertmanager:
      alertmanagerSpec:
        resources:
          limits:
            cpu: "500m"
            memory: "256Mi"
          requests:
            cpu: "100m"
            memory: "256Mi"
    grafana:
      resources:
        limits:
          cpu: "500m"
          memory: "512Mi"
        requests:
          cpu: "100m"
          memory: "256Mi"
      sidecar:
        resources:
          limits:
            cpu: "500m"
            memory: "100Mi"
          requests:
            cpu: "50m"
            memory: "50Mi"
      downloadDashboards:
        resources:
          limits:
            cpu: "20m"
            memory: "20Mi"
          requests:
            cpu: "20m"
            memory: "20Mi"
    kube-state-metrics:
      resources:
        limits:
          cpu: "500m"
          memory: "128Mi"
        requests:
          cpu: "10m"
          memory: "128Mi"
    prometheus-node-exporter:
      resources:
        limits:
          cpu: "500m"
          memory: "128Mi"
        requests:
          cpu: "100m"
          memory: "128Mi"
    prometheusOperator:
      admissionWebhooks:
        patch:
          resources:
            limits:
              cpu: "100m"
              memory: "128Mi"
            requests:
              cpu: "50m"
              memory: "128Mi"
        cleanupProxy:
          resources:
            limits:
              cpu: "100m"
              memory: "128Mi"
            requests:
              cpu: "50m"
              memory: "128Mi"
      resources:
        limits:
          cpu: "500m"
          memory: "512Mi"
        requests:
          cpu: "100m"
          memory: "512Mi"
      prometheusConfigReloader:
        resources:
          requests:
            cpu: "50m"
            memory: "128Mi"
          limits:
            cpu: "100m"
            memory: "128Mi"
    prometheus:
      prometheusSpec:
        resources:
          limits:
            cpu: "300m"
            memory: "2Gi"
          requests:
            cpu: "100m"
            memory: "2Gi"

twistlock:
  enabled: true
  values:
    console:
    resources:
      limits:
        memory: "1Gi"
        cpu: "500m"
      requests:
        memory: "1Gi"
        cpu: "100m"

addons:
  minioOperator:
    enabled: true
    values:
      operator:
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
            ephemeral-storage: 500Mi
          limits:
            cpu: 200m
            memory: 256Mi
      istio:
        enabled: true

  minio:
    enabled: false

  gitlab:
    enabled: true
    values:
      global:
        istio:
          enabled: true
      upgradeCheck:
        resources:
          requests:
            cpu: 500m
            memory: 500Mi
          limits:
            cpu: 500m
            memory: 500Mi
      redis:
        metrics:
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 256Mi
        master:
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 256Mi
        # :face_vomiting: TODO: Upstream merge request to make the naming more inclusive
        slave:
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 256Mi
        sentinel:
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 256Mi
        volumePermissions:
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 256Mi
        sysctlImage:
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 256Mi
      postgresql:
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 500m
            memory: 500Mi
      registry:
        init:
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
        resources:
          limits:
            cpu: 200m
            memory: 1024Mi
          requests:
            cpu: 200m
            memory: 1024Mi
      shared-secrets:
        resources:
          requests:
            cpu: 300m
            memory: 200Mi
          limits:
            cpu: 300m
            memory: 200Mi
      gitlab:
        toolbox:
          init:
            resources:
              requests:
                cpu: 200m
                memory: 200Mi
              limits:
                cpu: 200m
                memory: 200Mi
          resources:
            requests:
              cpu: 2
              memory: 3.5Gi
            limits:
              cpu: 2
              memory: 3.5Gi
          backups:
            cron:
              resources:
                requests:
                  cpu: 350m
                  memory: 350Mi
                limits:
                  cpu: 350m
                  memory: 350Mi
        gitlab-exporter:
          init:
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
              requests:
                cpu: 200m
                memory: 200Mi
          resources:
            limits:
              cpu: 150m
              memory: 200Mi
            requests:
              cpu: 150m
              memory: 200Mi
        migrations:
          init:
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
              requests:
                cpu: 200m
                memory: 200Mi
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 1Gi
        webservice:
          init:
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
              requests:
                cpu: 200m
                memory: 200Mi
          resources:
            limits:
              cpu: 600m
              memory: 2.5Gi
            requests:
              cpu: 600m
              memory: 2.5Gi
          workhorse:
            resources:
              limits:
                cpu: 600m
                memory: 2.5Gi
              requests:
                cpu: 600m
                memory: 2.5Gi
        sidekiq:
          init:
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
              requests:
                cpu: 200m
                memory: 200Mi
          resources:
            requests:
              memory: 3Gi
              cpu: 1500m
            limits:
              memory: 3Gi
              cpu: 1500m
        gitaly:
          init:
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
              requests:
                cpu: 200m
                memory: 200Mi
          resources:
            requests:
              cpu: 400m
              memory: 600Mi
            limits:
              cpu: 400m
              memory: 600Mi
        gitlab-shell:
          init:
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
              requests:
                cpu: 200m
                memory: 200Mi
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 300m
              memory: 300Mi
        praefect:
          init:
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
              requests:
                cpu: 200m
                memory: 200Mi
          resources:
            requests:
              cpu: 1
              memory: 1Gi
            limits:
              cpu: 1
              memory: 1Gi
      minio:
        init:
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
        resources:
          limits:
            cpu: 200m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 300Mi
      istio:
        enabled: true
        injection: enabled
        gitlab:
          gateways:
            - istio-system/public
  gitlabRunner:
    enabled: true
    values:
      resources:
        limits:
          memory: 256Mi
          cpu: 200m
        requests:
          memory: 256Mi
          cpu: 200m
